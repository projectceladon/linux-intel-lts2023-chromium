// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright 2024 Google LLC
 */

/dts-v1/;
#include "mt8186-corsola.dtsi"

/ {
	pp1000_edpbrdg: regulator-pp1000-edpbrdg {
		compatible = "regulator-fixed";
		regulator-name = "pp1000_edpbrdg";
		pinctrl-names = "default";
		pinctrl-0 = <&en_pp1000_edpbrdg>;
		enable-active-high;
		regulator-boot-on;
		gpio = <&pio 29 GPIO_ACTIVE_HIGH>;
		vin-supply = <&pp3300_z2>;
	};

	pp1800_edpbrdg_dx: regulator-pp1800-edpbrdg-dx {
		compatible = "regulator-fixed";
		regulator-name = "pp1800_edpbrdg_dx";
		pinctrl-names = "default";
		pinctrl-0 = <&en_pp1800_edpbrdg>;
		enable-active-high;
		regulator-boot-on;
		gpio = <&pio 30 GPIO_ACTIVE_HIGH>;
		vin-supply = <&mt6366_vio18_reg>;
	};

	pp3300_edp_dx: regulator-pp3300-edp-dx {
		compatible = "regulator-fixed";
		regulator-name = "pp3300_edp_dx";
		pinctrl-names = "default";
		pinctrl-0 = <&en_pp3300_edpbrdg>;
		enable-active-high;
		regulator-boot-on;
		gpio = <&pio 31 GPIO_ACTIVE_HIGH>;
		vin-supply = <&pp3300_z2>;
	};
};

&keyboard_controller {
	keypad,num-columns = <18>;

	function-row-physmap = <
		MATRIX_KEY(0x00, 0x02, KEY_F1)	/* T1 */
		MATRIX_KEY(0x03, 0x02, KEY_F2)	/* T2 */
		MATRIX_KEY(0x02, 0x02, KEY_F3)	/* T3 */
		MATRIX_KEY(0x01, 0x02, KEY_F4)	/* T4 */
		MATRIX_KEY(0x04, 0x04, KEY_F5)	/* T5 */
		MATRIX_KEY(0x02, 0x04, KEY_F6)	/* T6 */
		MATRIX_KEY(0x01, 0x04, KEY_F7)	/* T7 */
		MATRIX_KEY(0x02, 0x0b, KEY_F8)	/* T8 */
		MATRIX_KEY(0x01, 0x09, KEY_F9)	/* T9 */
		MATRIX_KEY(0x00, 0x04, KEY_F10)	/* T10 */
		MATRIX_KEY(0x00, 0x01, KEY_F11)	/* T11 */
		MATRIX_KEY(0x01, 0x05, KEY_F12)	/* T12 */
		MATRIX_KEY(0x03, 0x05, KEY_F13)	/* T13 */
		MATRIX_KEY(0x03, 0x09, KEY_F14)	/* T14 */
	>;

	linux,keymap = <
		CROS_TOP_ROW_KEYMAP_V30
		CROS_MAIN_KEYMAP_V30
		MATRIX_KEY(0x00, 0x02, KEY_BACK)
		MATRIX_KEY(0x03, 0x02, KEY_REFRESH)
		MATRIX_KEY(0x02, 0x02, KEY_ZOOM)
		MATRIX_KEY(0x01, 0x02, KEY_SCALE)
		MATRIX_KEY(0x04, 0x04, KEY_SYSRQ)
		MATRIX_KEY(0x02, 0x04, KEY_BRIGHTNESSDOWN)
		MATRIX_KEY(0x01, 0x04, KEY_BRIGHTNESSUP)
		MATRIX_KEY(0x02, 0x0b, KEY_DICTATE)
		MATRIX_KEY(0x01, 0x09, KEY_ACCESSIBILITY)
		MATRIX_KEY(0x00, 0x04, KEY_PLAYPAUSE)
		MATRIX_KEY(0x00, 0x01, KEY_MICMUTE)
		MATRIX_KEY(0x01, 0x05, KEY_MUTE)
		MATRIX_KEY(0x03, 0x05, KEY_VOLUMEDOWN)
		MATRIX_KEY(0x03, 0x09, KEY_VOLUMEUP)
	>;
};

&dsi_out {
	remote-endpoint = <&anx7625_in_>;
};

&i2c0 {
	clock-frequency = <400000>;

	anx_bridge: anx7625@58 {
		compatible = "analogix,anx7625";
		reg = <0x58>;
		pinctrl-names = "default";
		pinctrl-0 = <&anx7625_pins>;
		enable-gpios = <&pio 96 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&pio 98 GPIO_ACTIVE_HIGH>;
		vdd10-supply = <&pp1000_edpbrdg>;
		vdd18-supply = <&pp1800_edpbrdg_dx>;
		vdd33-supply = <&pp3300_edp_dx>;
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;

			anx7625_in_: endpoint {
				remote-endpoint = <&dsi_out>;
				data-lanes = <0 1 2 3>;
			};
		};

		port@1 {
			reg = <1>;

			anx7625_out: endpoint {
				remote-endpoint = <&panel_in>;
			};
		};

		aux-bus {
			panel: panel {
				compatible = "edp-panel";
				power-supply = <&pp3300_disp_x>;
				backlight = <&backlight_lcd0>;

				port {
					panel_in: endpoint {
						remote-endpoint = <&anx7625_out>;
					};
				};
			};
		};
	};
};

&i2c1 {
	i2c-hid-dev@5d {
		compatible = "hid-over-i2c";
		reg = <0x5d>;
		hid-descr-addr = <0x0001>;
		interrupt-parent = <&pio>;
		interrupts = <12 IRQ_TYPE_EDGE_FALLING>;
	};
};

&i2c2 {
	touchpad@15 {
		compatible = "elan,ekth3000";
		reg = <0x15>;
		interrupt-parent = <&pio>;
		interrupts = <11 IRQ_TYPE_LEVEL_LOW>;
		vcc-supply = <&pp3300_s3>;
		wakeup-source;
	};

	touchpad@2c {
		compatible = "hid-over-i2c";
		reg = <0x2c>;
		hid-descr-addr = <0x20>;
		interrupts-extended = <&pio 11 IRQ_TYPE_LEVEL_LOW>;
		vcc-supply = <&pp3300_s3>;
		wakeup-source;
	};
};

&pio {
	dpi_pin_default: dpi-pin-default {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO103__FUNC_GPIO103>,
				 <PINMUX_GPIO104__FUNC_GPIO104>,
				 <PINMUX_GPIO105__FUNC_GPIO105>,
				 <PINMUX_GPIO106__FUNC_GPIO106>,
				 <PINMUX_GPIO107__FUNC_GPIO107>,
				 <PINMUX_GPIO108__FUNC_GPIO108>,
				 <PINMUX_GPIO109__FUNC_GPIO109>,
				 <PINMUX_GPIO110__FUNC_GPIO110>,
				 <PINMUX_GPIO111__FUNC_GPIO111>,
				 <PINMUX_GPIO112__FUNC_GPIO112>,
				 <PINMUX_GPIO113__FUNC_GPIO113>,
				 <PINMUX_GPIO114__FUNC_GPIO114>,
				 <PINMUX_GPIO101__FUNC_GPIO101>,
				 <PINMUX_GPIO100__FUNC_GPIO100>,
				 <PINMUX_GPIO102__FUNC_GPIO102>,
				 <PINMUX_GPIO99__FUNC_GPIO99>;
			drive-strength = <MTK_DRIVE_10mA>;
			output-low;
		};
	};

	dpi_pin_func: dpi-pin-func {
		pins-cmd-dat {
			pinmux = <PINMUX_GPIO103__FUNC_DPI_DATA0>,
				 <PINMUX_GPIO104__FUNC_DPI_DATA1>,
				 <PINMUX_GPIO105__FUNC_DPI_DATA2>,
				 <PINMUX_GPIO106__FUNC_DPI_DATA3>,
				 <PINMUX_GPIO107__FUNC_DPI_DATA4>,
				 <PINMUX_GPIO108__FUNC_DPI_DATA5>,
				 <PINMUX_GPIO109__FUNC_DPI_DATA6>,
				 <PINMUX_GPIO110__FUNC_DPI_DATA7>,
				 <PINMUX_GPIO111__FUNC_DPI_DATA8>,
				 <PINMUX_GPIO112__FUNC_DPI_DATA9>,
				 <PINMUX_GPIO113__FUNC_DPI_DATA10>,
				 <PINMUX_GPIO114__FUNC_DPI_DATA11>,
				 <PINMUX_GPIO101__FUNC_DPI_HSYNC>,
				 <PINMUX_GPIO100__FUNC_DPI_VSYNC>,
				 <PINMUX_GPIO102__FUNC_DPI_DE>,
				 <PINMUX_GPIO99__FUNC_DPI_PCLK>;
			drive-strength = <MTK_DRIVE_10mA>;
		};
	};

	anx7625_pins: anx7625-pins {
		pins2 {
			pinmux = <PINMUX_GPIO9__FUNC_GPIO9>;
			input-enable;
			/delete-property/ bias-pull-up;
			bias-disable;
		};
	};

	en_pp1000_edpbrdg: pp1000-edpbrdg-en-pins {
		pins-vreg-en {
			pinmux = <PINMUX_GPIO29__FUNC_GPIO29>;
			output-low;
		};
	};

	en_pp1800_edpbrdg: pp1800-edpbrdg-en-pins {
		pins-vreg-en {
			pinmux = <PINMUX_GPIO30__FUNC_GPIO30>;
			output-low;
		};
	};

	en_pp3300_edpbrdg: pp3300-edpbrdg-en-pins {
		pins-vreg-en {
			pinmux = <PINMUX_GPIO31__FUNC_GPIO31>;
			output-low;
		};
	};
};
